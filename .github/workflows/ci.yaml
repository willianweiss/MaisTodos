name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Install Docker Compose
      run: sudo apt-get update && sudo apt-get install -y docker-compose
    
    - name: Load environment variables
      run: echo "${{ secrets.ENV_FILE }}" > .env
    
    - name: Build docker-compose services
      run: docker-compose build

    - name: Start services
      run: docker-compose up -d

    - name: Run tests
      run: docker-compose run --rm test /bin/bash -c "pytest" -e DB_USER=${{ secrets.DB_USER }} -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} -e DB_HOST=${{ secrets.DB_HOST }} -e DB_NAME=${{ secrets.DB_NAME }} -e POSTGRES_URL=${{ secrets.POSTGRES_URL }} -e SECRET_KEY=${{ secrets.SECRET_KEY }} -e JWT_ALGORITHM=${{ secrets.JWT_ALGORITHM }}

    - name: Check code coverage
      run: docker-compose run --rm test /bin/bash -c "coverage run -m pytest && coverage report"

    - name: Applying Linting
      run: docker-compose run --rm api /bin/bash -c "black . && isort ."

    - name: Verify Linting
      run:  docker-compose run --rm api /bin/bash -c "black --check . && isort --check ."

    - name: Security check with Bandit
      run: docker-compose run --rm api /bin/bash -c "bandit -r . || true"

    - name: Check dependencies with Safety
      run: docker-compose run --rm api /bin/bash -c "safety check || true"

    - name: Stop services
      run: docker-compose down
